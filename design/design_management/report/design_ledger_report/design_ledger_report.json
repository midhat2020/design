{
 "add_total_row": 0,
 "columns": [],
 "creation": "2022-09-07 11:10:21.285240",
 "disable_prepared_report": 0,
 "disabled": 0,
 "docstatus": 0,
 "doctype": "Report",
 "filters": [],
 "idx": 0,
 "is_standard": "Yes",
 "letter_head": "Precihole Sports Black Logo",
 "modified": "2022-09-08 10:17:32.977042",
 "modified_by": "Administrator",
 "module": "Design Management",
 "name": "Design Ledger Report",
 "owner": "Administrator",
 "prepared_report": 0,
 "query": "",
 "ref_doctype": "DDN",
 "report_name": "Design Ledger Report",
 "report_script": "#Main data table\r\nresults = frappe.db.get_all('Design Ledger Entry', ['*'], filters=filters)\r\n\r\nfor result in results:\r\n    result.backwards_name = result.item_code [::-1]\r\n\r\nmessage = \"This report has been generated automatically.\"\r\n\r\nDesign = [user for user in results if user.warehouse == \"Design\"]\r\nInventory = [user for user in results if user.warehouse == \"Inventory\"]\r\nQuality = [user for user in results if user.warehouse == \"Quality\"]\r\n\r\nreport_summary = [\r\n\t{\r\n\t\t\"value\": frappe.format_date(frappe.utils.nowdate()),\r\n\t\t\"label\": \"Report Date\",\r\n\t\t\"datatype\": \"Data\",\r\n\t},\r\n\t{\r\n\t\t\"value\": len(results),\r\n\t\t\"label\": \"Total users\",\r\n\t\t\"datatype\": \"Data\",\r\n\t}\r\n]\r\n\r\n## Now, we can generate a chart using standard Frappe Charts syntax\r\n## To keep things short, I'm just manually entering data here, but of course usually this would be generated programmatically\r\nchart = {\r\n\t'data': {\r\n\t\t'labels': [\"One\", \"Two\", \"Three\"],\r\n\t\t'datasets': [\r\n            {\r\n                'name': \"Female\", 'type': \"bar\",\r\n                'values':[2,4,7]\r\n            },\r\n            {\r\n                'name': \"Male\", 'type': \"bar\",\r\n                'values':[6,4,7]\r\n            }\r\n        ]\r\n\t},\r\n\t'type': \"bar\"\r\n}\r\n\r\n## Finally, define your columns. Many of the usual field definition properties are available here for use.\r\n## If you wanted to, you could also specify these columns in the child table above.\r\ncolumns = [\r\n    {\r\n        'fieldname': 'name',\r\n        'label': _('Document Link'),\r\n        'fieldtype': 'Link',\r\n        'options': 'User',\r\n        'width': 300\r\n    },\r\n    {\r\n        'fieldname': 'first_name',\r\n        'label': _('First Name'),\r\n        'fieldtype': 'Data',\r\n        'align': 'left',\r\n        'width': 200\r\n    },\r\n    {\r\n        'fieldname': 'last_name',\r\n        'label': _('Last Name'),\r\n        'fieldtype': 'Data',\r\n        'width': 200,\r\n        'align': 'left'\r\n    },\r\n    {\r\n        # here's our `backwards_name` field, which we defined earlier\r\n        'fieldname': 'backwards_name',\r\n        'label': _('Backwards Name'),\r\n        'fieldtype': 'Data',\r\n        'align': 'right',\r\n        'width': 200\r\n    },\r\n]\r\n\r\n## finally, we assemble it all together\r\ndata = columns, results, message, chart, report_summary",
 "report_type": "Script Report",
 "roles": [
  {
   "role": "System Manager"
  }
 ]
}